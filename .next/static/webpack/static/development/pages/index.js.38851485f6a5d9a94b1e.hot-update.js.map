{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.38851485f6a5d9a94b1e.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import {useEffect} from 'react'\r\nimport {Button,Icon,Tabs} from \"antd\"\r\nimport {connect} from 'react-redux'\r\nimport Router,{withRouter} from 'next/router'\r\nimport LRU from 'lru-cache'\r\nimport api from '../lib/api'\r\nimport Repo from '../components/Repo'\r\n\r\nconst cache=new LRU({\r\n  maxAge:1000*60*5 //有效期5分钟\r\n})\r\n\r\nconst isServer = typeof window === 'undefined'\r\nlet cacheUserRepos,cacheUserStaredRepos\r\nfunction Index({userRepos,user,router,userStaredRepos}){\r\n\r\n  // userRepos, userStaredRepos依赖的作用是,数据过期后,将重新请求的数据进行缓存\r\nuseEffect(()=>{\r\n  if(!isServer){\r\n    if(userRepos.length>0){\r\n      cache.set('userRepos',userRepos)\r\n    }\r\n    if(userStaredRepos.length>0){\r\n      cache.set('userStaredRepos',userStaredRepos)\r\n    }\r\n    //手动缓存\r\n    // cacheUserRepos=userRepos\r\n    // cacheUserStaredRepos=userStaredRepos\r\n    // setTimeout(()=>{\r\n    //     cacheUserRepos=null\r\n    //     cacheUserStaredRepos=null\r\n    // },1000*60*5)\r\n\r\n  }\r\n},[userRepos,userStaredRepos])\r\n\r\n  const tabKey = router.query.key || '1'\r\n  const handleTabChange = activeKey => {\r\n    Router.push(`/?key=${activeKey}`)\r\n  }\r\n    if(!user||!user.id){\r\n      return <div className='root'>\r\n        <p>亲，您还没有登录哦~</p>\r\n        <Button type='primary' href={`/prepare-auth?url=${router.asPath}`}>去登录</Button>\r\n        <style jsx>\r\n        {`\r\n        .root{\r\n          position:absolute;\r\n          top:50%;\r\n          left:50%;\r\n          transform:translate(-50%,-50%);\r\n          display:flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n        `}\r\n      </style>\r\n      </div>\r\n      \r\n      }else{\r\n        return <div className='root'>\r\n          <div className='user-info'>\r\n            <img src={user.avatar_url} alt=\"avatar_url\" className=\"avatar\" />\r\n            <span className=\"login\">{user.login}</span>\r\n            <span className=\"name\">{user.name}</span>\r\n            <span className=\"bio\">{user.bio}</span>\r\n            <p className=\"email\">\r\n              <Icon type=\"mail\" style={{ marginRight: 5 }} />\r\n              <a href={`mailto:${user.email}`}>\r\n                {user.email ? user.email : 'https://github.com/IFreeOvO'}\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"user-repos\">\r\n            <Tabs activeKey={tabKey} onChange={handleTabChange} animated={false}>\r\n              <Tabs.TabPane tab=\"你的仓库\" key=\"1\">\r\n                {userRepos.length>0\r\n                ?userRepos.map(repo => (\r\n                  <Repo repo={repo} key={repo.id} />\r\n                ))\r\n                :'暂时未查询到仓库'\r\n              }\r\n              </Tabs.TabPane>\r\n              <Tabs.TabPane tab=\"你关注的仓库\" key=\"2\">\r\n                {userStaredRepos.length>0\r\n                ?userStaredRepos.map(repo => (\r\n                  <Repo repo={repo} key={repo.id} />\r\n                ))\r\n                :'暂无关注的仓库'\r\n              }\r\n              </Tabs.TabPane>\r\n            </Tabs>\r\n          </div>\r\n          <style jsx>{`\r\n            .root {\r\n              display: flex;\r\n              padding: 20px 0;\r\n            }\r\n            .user-info {\r\n              width: 200px;\r\n              margin-right: 40px;\r\n              flex-shrink: 0;\r\n              display: flex;\r\n              flex-direction: column;\r\n            }\r\n            .login {\r\n              font-weight: 800;\r\n              font-size: 20px;\r\n              margin-top: 20px;\r\n            }\r\n            .name {\r\n              font-size: 16px;\r\n              color: #777;\r\n            }\r\n            .bio {\r\n              margin-top: 20px;\r\n              color: #333;\r\n            }\r\n            .avatar {\r\n              width: 100%;\r\n              border-radius: 5px;\r\n            }\r\n            .user-repos{\r\n              position:relative;\r\n            }\r\n          `}</style>\r\n        </div>\r\n      }\r\n}\r\n\r\nIndex.getInitialProps=async ({ctx,reduxStore,req})=>{\r\n  const user =reduxStore.getState().user\r\n  let userRepos=[],userStaredRepos=[],userReposResp={},userStarredReposResp={}\r\n  if(!user||!user.id){\r\n    return {\r\n      isLogin:false,\r\n      userRepos,\r\n      userStaredRepos,\r\n    }\r\n  }else{\r\n    if(!isServer){\r\n      console.log(cache.get('userStaredRepos'))\r\n      if(cache.get('userStaredRepos')&&cache.get('userRepos')){\r\n        return {\r\n          isLogin:true,\r\n          userRepos:cacheUserRepos,\r\n          userStaredRepos:cacheUserStaredRepos\r\n        }\r\n      }\r\n      //手动缓存\r\n      // if(cacheUserStaredRepos&&cacheUserRepos){\r\n      //   return {\r\n      //     isLogin:true,\r\n      //     userRepos:cacheUserRepos,\r\n      //     userStaredRepos:cacheUserStaredRepos\r\n      //   }\r\n      // }\r\n    }\r\n    try {\r\n      userReposResp=await api.request({url:'/user/repos'},ctx.req,ctx.res)\r\n      userStarredReposResp= await api.request({url:'/user/starred'},ctx.req,ctx.res)\r\n      if(isServer){\r\n        userRepos=userReposResp.data||[]\r\n        userStaredRepos=userStarredReposResp.data||[]\r\n      }else{\r\n        if(userReposResp.data&&userReposResp.data.success){\r\n          userRepos=userReposResp.data.data||[]\r\n        }\r\n        if(userStaredRepos.data&&userStaredRepos.data.success){\r\n          userStaredRepos=userStarredReposResp.data.data||[]\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('window error',error)\r\n    }\r\n    return {\r\n      isLogin:true,\r\n      userRepos,\r\n      userStaredRepos,\r\n    }\r\n  }\r\n    \r\n}\r\nconst mapStateToprops=(state)=>{\r\n  return {\r\n    ...state\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToprops)(Index)) "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAmBA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAMA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAzBA;AAAA;AAmEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AAHA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAZA;AAAA;AAAA;AAAA;AACA;AADA;AAcA;AACA;AACA;AAHA;AACA;AAdA;AAAA;AAAA;AAAA;AA6BA;AAAA;AACA;AA9BA;AA6BA;AA7BA;AAAA;AA8BA;AAAA;AACA;AA/BA;AA8BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA1CA;AAAA;AACA;AADA;AAAA;AAAA;AA2CA;AACA;AA5CA;AAAA;AA8CA;AACA;AACA;AAHA;AACA;AA9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAoDA;AACA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}