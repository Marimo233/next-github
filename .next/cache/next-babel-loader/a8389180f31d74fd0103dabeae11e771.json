{"ast":null,"code":"import LRU from 'lru-cache';\nvar REPO_CACHE = new LRU({\n  maxAge: 1000 * 60 * 60\n});\nexport var cache = function cache(repo) {\n  if (repo) {\n    var full_name = repo.full_name;\n    REPO_CACHE.set(full_name, repo);\n  }\n};\nexport var get = function get(full_name) {\n  return REPO_CACHE.get(full_name);\n};\nexport var cacheArray = function cacheArray(repos) {\n  if (repos && Array.isArray(repos)) {\n    repos.forEach(function (repo) {\n      cache(repo.full_name, repo);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/marimo/Desktop/next-github/lib/repo-cache.js"],"names":["LRU","REPO_CACHE","maxAge","cache","repo","full_name","set","get","cacheArray","repos","Array","isArray","forEach"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AAEA,IAAMC,UAAU,GAAC,IAAID,GAAJ,CAAQ;AACvBE,EAAAA,MAAM,EAAC,OAAK,EAAL,GAAQ;AADQ,CAAR,CAAjB;AAIA,OAAO,IAAMC,KAAK,GAAC,SAANA,KAAM,CAACC,IAAD,EAAQ;AACzB,MAAGA,IAAH,EAAQ;AACN,QAAMC,SAAS,GAACD,IAAI,CAACC,SAArB;AACAJ,IAAAA,UAAU,CAACK,GAAX,CAAeD,SAAf,EAAyBD,IAAzB;AACD;AAEF,CANM;AAQP,OAAO,IAAMG,GAAG,GAAC,SAAJA,GAAI,CAACF,SAAD,EAAa;AAC5B,SAAOJ,UAAU,CAACM,GAAX,CAAeF,SAAf,CAAP;AACD,CAFM;AAGP,OAAO,IAAMG,UAAU,GAAC,SAAXA,UAAW,CAACC,KAAD,EAAS;AAC/B,MAAGA,KAAK,IAAEC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAV,EAA+B;AAC7BA,IAAAA,KAAK,CAACG,OAAN,CAAc,UAAAR,IAAI,EAAI;AACpBD,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAN,EAAgBD,IAAhB,CAAL;AACD,KAFD;AAGD;AAEF,CAPM","sourcesContent":["import LRU from 'lru-cache'\r\n\r\nconst REPO_CACHE=new LRU({\r\n  maxAge:1000*60*60\r\n})\r\n\r\nexport const cache=(repo)=>{\r\n  if(repo){\r\n    const full_name=repo.full_name\r\n    REPO_CACHE.set(full_name,repo)\r\n  }\r\n  \r\n}\r\n\r\nexport const get=(full_name)=>{\r\n  return REPO_CACHE.get(full_name)\r\n}\r\nexport const cacheArray=(repos)=>{\r\n  if(repos&&Array.isArray(repos)){\r\n    repos.forEach(repo => {\r\n      cache(repo.full_name,repo)\r\n    });\r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}