{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useMemo } from 'react';\nimport MarkdownIt from 'markdown-it';\nimport 'github-markdown-css';\nconst md = new MarkdownIt({\n  html: true,\n  // 将ms里的html转换\n  linkify: true // 把链接转成可点击的连接\n\n}); // 解决atob中文解码后乱码问题\n\nfunction b64_to_utf8(str) {\n  return decodeURIComponent(escape(atob(str)));\n}\n\nexport default function Markdown({\n  content,\n  isbase64\n}) {\n  const markdown = isbase64 ? b64_to_utf8(content) : content;\n  const html = md.render(markdown);\n  return __jsx(\"div\", {\n    className: \"markdown-body\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/marimo/Desktop/next-github/components/Markdown.js"],"names":["memo","useMemo","MarkdownIt","md","html","linkify","b64_to_utf8","str","decodeURIComponent","escape","atob","Markdown","content","isbase64","markdown","render","__html"],"mappings":";;AAAA,SAAQA,IAAR,EAAcC,OAAd,QAA4B,OAA5B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,qBAAP;AAEA,MAAMC,EAAE,GAAG,IAAID,UAAJ,CAAe;AACxBE,EAAAA,IAAI,EAAE,IADkB;AACZ;AACZC,EAAAA,OAAO,EAAE,IAFe,CAEV;;AAFU,CAAf,CAAX,C,CAKA;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACH,GAAD,CAAL,CAAP,CAAzB;AACD;;AAED,eAAe,SAASI,QAAT,CAAkB;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAlB,EAAqC;AAClD,QAAMC,QAAQ,GAACD,QAAQ,GAACP,WAAW,CAACM,OAAD,CAAZ,GAAsBA,OAA7C;AACA,QAAMR,IAAI,GAACD,EAAE,CAACY,MAAH,CAAUD,QAAV,CAAX;AACA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACP;AAAK,IAAA,uBAAuB,EAAE;AAACE,MAAAA,MAAM,EAAEZ;AAAT;AAA9B,IADO,CAAP;AAGD","sourcesContent":["import {memo, useMemo} from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport 'github-markdown-css'\r\n\r\nconst md = new MarkdownIt({\r\n  html: true, // 将ms里的html转换\r\n  linkify: true // 把链接转成可点击的连接\r\n})\r\n\r\n// 解决atob中文解码后乱码问题\r\nfunction b64_to_utf8(str) {\r\n  return decodeURIComponent(escape(atob(str)))\r\n}\r\n\r\nexport default function Markdown({content,isbase64}){\r\n  const markdown=isbase64?b64_to_utf8(content):content\r\n  const html=md.render(markdown)\r\n  return <div className='markdown-body'>\r\n  <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n  </div>\r\n}"]},"metadata":{},"sourceType":"module"}