{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _Spin from \"antd/lib/spin\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Button from \"antd/lib/button\";\nimport _Select from \"antd/lib/select\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport { useState, useCallback, useEffect } from 'react';\nimport withDetail from '../../components/withDetail';\nimport api from '../../lib/api';\nimport { getLastUpdated } from '../../lib/utils';\nimport SearchUser from '../../components/SearchUser';\nvar Option = _Select.Option;\nvar Markdown = dynamic(function () {\n  return import('../../components/Markdown');\n}, {\n  loading: function loading() {\n    return __jsx(\"p\", null, \"Loading\");\n  },\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/Markdown')];\n    },\n    modules: ['../../components/Markdown']\n  }\n});\nvar CACHE = {};\nvar isServer = false;\n\nfunction Label(_ref) {\n  var label = _ref.label;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      backgroundColor: \"#\".concat(label.color)\n    },\n    className: \"jsx-1709400167\" + \" \" + \"label\"\n  }, label.name), __jsx(_JSXStyle, {\n    id: \"1709400167\"\n  }, \".label.jsx-1709400167{display:inline-block;line-height:20px;margin-left:15px;padding:3px;border-radius:3px;font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\marimo\\\\\\\\Desktop\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction IssueDetail(_ref2) {\n  var issue = _ref2.issue;\n  return __jsx(\"div\", {\n    className: \"jsx-1740130853\" + \" \" + 'root'\n  }, __jsx(Markdown, {\n    content: issue.body\n  }), __jsx(\"div\", {\n    className: \"jsx-1740130853\" + \" \" + 'actions'\n  }, __jsx(_Button, {\n    href: issue.html_url,\n    target: \"_blank\"\n  }, \"\\u6253\\u5F00issue\\u8BA8\\u8BBA\\u9875\\u9762\")), __jsx(_JSXStyle, {\n    id: \"1740130853\"\n  }, \".root.jsx-1740130853{background:#fafafa;padding:20px;}.actions.jsx-1740130853{text-align:right;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\marimo\\\\\\\\Desktop\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n}\n\nfunction IssueItem(_ref3) {\n  var issue = _ref3.issue;\n\n  var _useState = useState(false),\n      showDetail = _useState[0],\n      setShowDetail = _useState[1]; // 这个写法就可以不依赖showDetail。这么写可以避开闭包\n\n\n  var toggleShowDetail = useCallback(function () {\n    setShowDetail(function (detail) {\n      return !detail;\n    });\n  }, []);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"jsx-1445670956\" + \" \" + \"issue\"\n  }, __jsx(_Button, {\n    type: \"primary\",\n    size: \"small\",\n    style: {\n      position: 'absolute',\n      top: 10,\n      right: 10\n    },\n    onClick: toggleShowDetail\n  }, showDetail ? '隐藏' : '查看'), __jsx(\"div\", {\n    className: \"jsx-1445670956\" + \" \" + \"avatar\"\n  }, __jsx(_Avatar, {\n    src: issue.user.avatar_url,\n    shape: \"square\",\n    size: 50\n  })), __jsx(\"div\", {\n    className: \"jsx-1445670956\" + \" \" + \"main-info\"\n  }, __jsx(\"h6\", {\n    className: \"jsx-1445670956\"\n  }, __jsx(\"span\", {\n    className: \"jsx-1445670956\"\n  }, issue.title), issue.labels.map(function (label) {\n    return __jsx(Label, {\n      label: label,\n      key: label.id\n    });\n  })), __jsx(\"p\", {\n    className: \"jsx-1445670956\" + \" \" + \"sub-info\"\n  }, __jsx(\"span\", {\n    className: \"jsx-1445670956\"\n  }, \"Updated at \", getLastUpdated(issue.updated_at)))), __jsx(_JSXStyle, {\n    id: \"1445670956\"\n  }, \".issue.jsx-1445670956{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:10px;}.issue.jsx-1445670956:hover{background:#fafafa;}.issue.jsx-1445670956+.issue.jsx-1445670956{border-top:1px solid #eee;}.main-info.jsx-1445670956>h6.jsx-1445670956{max-width:600px;font-size:16px;padding-right:40px;}.avatar.jsx-1445670956{margin-right:20px;}.sub-info.jsx-1445670956{margin-bottom:0;}.sub-info.jsx-1445670956>span.jsx-1445670956+span.jsx-1445670956{display:inline-block;margin-left:20px;font-size:12px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFyaW1vXFxEZXNrdG9wXFxuZXh0LWdpdGh1YlxccGFnZXNcXGRldGFpbFxcaXNzdWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRGa0IsQUFHMEIsQUFLTSxBQUdPLEFBR1YsQUFLRSxBQUdGLEFBR0ssZ0JBVk4sQUFRakIsRUFIQSxDQVhBLEVBaUJtQixLQWRuQixLQUlxQixPQVdKLFlBVmpCLEdBV0EscUJBeEJvQixrQkFDTCxhQUNmIiwiZmlsZSI6IkM6XFxVc2Vyc1xcbWFyaW1vXFxEZXNrdG9wXFxuZXh0LWdpdGh1YlxccGFnZXNcXGRldGFpbFxcaXNzdWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJ1xyXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBBdmF0YXIsIEJ1dHRvbiwgU2VsZWN0LCBTcGluIH0gZnJvbSAnYW50ZCdcclxuXHJcbmltcG9ydCB3aXRoRGV0YWlsIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvd2l0aERldGFpbCdcclxuaW1wb3J0IGFwaSBmcm9tICcuLi8uLi9saWIvYXBpJ1xyXG5pbXBvcnQge2dldExhc3RVcGRhdGVkfSBmcm9tICcuLi8uLi9saWIvdXRpbHMnXHJcbmltcG9ydCBTZWFyY2hVc2VyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU2VhcmNoVXNlcidcclxuXHJcbmNvbnN0IE9wdGlvbj1TZWxlY3QuT3B0aW9uXHJcbmNvbnN0IE1hcmtkb3duPWR5bmFtaWMoKCk9PmltcG9ydCAoJy4uLy4uL2NvbXBvbmVudHMvTWFya2Rvd24nKSwge1xyXG4gIGxvYWRpbmc6ICgpID0+IDxwPkxvYWRpbmc8L3A+XHJcbn0pXHJcblxyXG5jb25zdCBDQUNIRSA9IHt9XHJcbmNvbnN0IGlzU2VydmVyPXR5cGVvZiB3aW5kb3c9PT0ndW5kZWZpbmVkJ1xyXG5cclxuXHJcbmZ1bmN0aW9uIExhYmVsKHsgbGFiZWwgfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxhYmVsXCIgc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiBgIyR7bGFiZWwuY29sb3J9YCB9fT5cclxuICAgICAgICB7bGFiZWwubmFtZX1cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAubGFiZWwge1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICAgICAgICAgIHBhZGRpbmc6IDNweDtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvPlxyXG4gIClcclxufVxyXG5mdW5jdGlvbiBJc3N1ZURldGFpbCh7aXNzdWV9KXtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9J3Jvb3QnPlxyXG4gICAgICA8TWFya2Rvd24gY29udGVudD17aXNzdWUuYm9keX0gLz5cclxuICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhY3Rpb25zJz5cclxuICAgICAgICAgIDxCdXR0b24gaHJlZj17aXNzdWUuaHRtbF91cmx9IHRhcmdldD1cIl9ibGFua1wiPlxyXG4gICAgICAgICAgICAgIOaJk+W8gGlzc3Vl6K6o6K666aG16Z2iXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgIDwvZGl2PlxyXG4gICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgLnJvb3Qge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogI2ZhZmFmYTtcclxuICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hY3Rpb25zIHtcclxuICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59XHJcblxyXG5mdW5jdGlvbiBJc3N1ZUl0ZW0oe2lzc3VlfSl7XHJcbiAgY29uc3QgW3Nob3dEZXRhaWwsIHNldFNob3dEZXRhaWxdID0gdXNlU3RhdGUoZmFsc2UpXHJcbiAgLy8g6L+Z5Liq5YaZ5rOV5bCx5Y+v5Lul5LiN5L6d6LWWc2hvd0RldGFpbOOAgui/meS5iOWGmeWPr+S7pemBv+W8gOmXreWMhVxyXG4gIGNvbnN0IHRvZ2dsZVNob3dEZXRhaWwgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICBzZXRTaG93RGV0YWlsKGRldGFpbCA9PiAhZGV0YWlsKVxyXG4gIH0sIFtdKVxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImlzc3VlXCI+XHJcbiAgICAgICAgPEJ1dHRvblxyXG4gICAgICAgICAgdHlwZT1cInByaW1hcnlcIlxyXG4gICAgICAgICAgc2l6ZT1cInNtYWxsXCJcclxuICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxyXG4gICAgICAgICAgICB0b3A6IDEwLFxyXG4gICAgICAgICAgICByaWdodDogMTBcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgICBvbkNsaWNrPXt0b2dnbGVTaG93RGV0YWlsfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtzaG93RGV0YWlsPyfpmpDol48nOifmn6XnnIsnfVxyXG4gICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXZhdGFyXCI+XHJcbiAgICAgICAgICA8QXZhdGFyIHNyYz17aXNzdWUudXNlci5hdmF0YXJfdXJsfSBzaGFwZT1cInNxdWFyZVwiIHNpemU9ezUwfT48L0F2YXRhcj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbi1pbmZvXCI+XHJcbiAgICAgICAgICA8aDY+XHJcbiAgICAgICAgICAgIDxzcGFuPntpc3N1ZS50aXRsZX08L3NwYW4+XHJcbiAgICAgICAgICAgIHtpc3N1ZS5sYWJlbHMubWFwKGxhYmVsID0+IDxMYWJlbCBsYWJlbD17bGFiZWx9IGtleT17bGFiZWwuaWR9Lz4pfVxyXG4gICAgICAgICAgPC9oNj5cclxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInN1Yi1pbmZvXCI+XHJcbiAgICAgICAgICAgIDxzcGFuPlVwZGF0ZWQgYXQge2dldExhc3RVcGRhdGVkKGlzc3VlLnVwZGF0ZWRfYXQpfTwvc3Bhbj5cclxuICAgICAgICAgIDwvcD4gIFxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgLmlzc3VlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLmlzc3VlOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZhZmFmYTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5pc3N1ZSArIC5pc3N1ZSB7XHJcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLm1haW4taW5mbyA+IGg2IHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLmF2YXRhciB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC5zdWItaW5mbyB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAuc3ViLWluZm8gPiBzcGFuICsgc3BhbiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgIFxyXG4gICAgICA8L2Rpdj5cclxuICAgICAge3Nob3dEZXRhaWwgPyA8SXNzdWVEZXRhaWwgaXNzdWU9e2lzc3VlfSAvPiA6IG51bGx9XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbi8vIOiOt+WPluivt+axguWPguaVsFxyXG5mdW5jdGlvbiBtYWtlUXVlcnkoY3JlYXRvciwgc3RhdGUsIGxhYmVscykge1xyXG4gIGxldCBjcmVhdG9yU3RyID0gY3JlYXRvciA/IGBjcmVhdG9yPSR7Y3JlYXRvcn1gIDogJydcclxuICBsZXQgc3RhdGVTdHIgPSBzdGF0ZSA/IGBzdGF0ZT0ke3N0YXRlfWAgOiAnJ1xyXG4gIGxldCBsYWJlbFN0ciA9ICcnXHJcbiAgaWYgKGxhYmVscyAmJiBsYWJlbHMubGVuZ3RoKSB7XHJcbiAgICBsYWJlbFN0ciA9IGBsYWJlbHM9JHtsYWJlbHMuam9pbignLCcpfWBcclxuICB9XHJcblxyXG4gIGNvbnN0IGFyciA9IFtdXHJcblxyXG4gIGNyZWF0b3JTdHIgJiYgYXJyLnB1c2goY3JlYXRvclN0cilcclxuICBzdGF0ZVN0ciAmJiBhcnIucHVzaChzdGF0ZVN0cilcclxuICBsYWJlbFN0ciAmJiBhcnIucHVzaChsYWJlbFN0cilcclxuXHJcbiAgcmV0dXJuIGA/JHthcnIuam9pbignJicpfWBcclxufVxyXG5cclxuXHJcblxyXG5jb25zdCBJc3N1ZXM9KHtpbml0aWFsSXNzdWVzLCBsYWJlbHMsIG93bmVyLCBuYW1lfSk9PntcclxuXHJcbmNvbnN0IFtjcmVhdG9yLHNldENyZWF0b3JdPXVzZVN0YXRlKCcnKVxyXG5jb25zdCBbc3RhdGUsc2V0U3RhdGVdPXVzZVN0YXRlKCdhbGwnKVxyXG5jb25zdCBbbGFiZWwsc2V0TGFiZWxdPXVzZVN0YXRlKFtdKVxyXG5jb25zdCBbaXNzdWVzLCBzZXRJc3N1ZXNdID0gdXNlU3RhdGUoaW5pdGlhbElzc3VlcylcclxuY29uc3QgW2ZldGNoaW5nLCBzZXRGZXRjaGluZ10gPSB1c2VTdGF0ZShmYWxzZSlcclxuXHJcbiAgLy8g57yT5a2YbGFiZWzor7fmsYLnu5PmnpxcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgIWlzU2VydmVyICYmIChDQUNIRVtgJHtvd25lcn0vJHtuYW1lfWBdID0gbGFiZWxzKVxyXG4gIH0sIFtvd25lciwgbmFtZSwgbGFiZWxzXSlcclxuXHJcbiAgLy8g6YCJ5Lit55So5oi357uT5p6c55qE5Zue6LCDXHJcbiAgY29uc3QgaGFuZGxlQ3JlYXRvckNoYW5nZSA9IHVzZUNhbGxiYWNrKHZhbHVlID0+IHtcclxuICAgIHNldENyZWF0b3IodmFsdWUpXHJcbiAgfSwgW10pXHJcblxyXG4gIC8vIOmAieS4reeKtuaAgee7k+aenOeahOWbnuiwg1xyXG4gIGNvbnN0IGhhbmRsZVN0YXRlQ2hhbmdlID0gdXNlQ2FsbGJhY2sodmFsdWUgPT4ge1xyXG4gICAgc2V0U3RhdGUodmFsdWUpXHJcbiAgfSwgW10pXHJcblxyXG4gIC8vIOmAieS4rWxhYmVs57uT5p6c55qE5Zue6LCDXHJcbiAgY29uc3QgaGFuZGxlTGFiZWxDaGFuZ2UgPSB1c2VDYWxsYmFjayh2YWx1ZSA9PiB7XHJcbiAgICBzZXRMYWJlbCh2YWx1ZSlcclxuICB9LCBbXSlcclxuXHJcbiAgY29uc3QgaGFuZGxlU2VhcmNoID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0RmV0Y2hpbmcodHJ1ZSlcclxuICAgIGFwaS5yZXF1ZXN0KHtcclxuICAgICAgdXJsOiBgL3JlcG9zLyR7b3duZXJ9LyR7bmFtZX0vaXNzdWVzJHttYWtlUXVlcnkoY3JlYXRvciwgc3RhdGUsIGxhYmVsKX1gXHJcbiAgICB9KVxyXG4gICAgICAudGhlbihyZXNwID0+IHNldElzc3VlcyhyZXNwLmRhdGEpKVxyXG4gICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHNldEZldGNoaW5nKGZhbHNlKVxyXG4gICAgICB9KVxyXG4gIH0sIFtvd25lciwgbmFtZSwgY3JlYXRvciwgc3RhdGUsIGxhYmVsXSlcclxuICBcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPSdyb290Jz5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc2VhcmNoJz5cclxuICAgICAgICAgIDxTZWFyY2hVc2VyIG9uQ2hhbmdlPXtoYW5kbGVDcmVhdG9yQ2hhbmdlfSB2YWx1ZT17Y3JlYXRvcn0vPlxyXG4gICAgICAgICAgPFNlbGVjdFxyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIueKtuaAgVwiXHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVTdGF0ZUNoYW5nZX1cclxuICAgICAgICAgICAgdmFsdWU9e3N0YXRlfVxyXG4gICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogMjAwLCBtYXJnaW5MZWZ0OiAyMCB9fVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8T3B0aW9uIHZhbHVlPSdhbGwnPmFsbDwvT3B0aW9uPlxyXG4gICAgICAgICAgICA8T3B0aW9uIHZhbHVlPSdvcGVuJz5vcGVuPC9PcHRpb24+XHJcbiAgICAgICAgICAgIDxPcHRpb24gdmFsdWU9J2Nsb3NlZCc+Y2xvc2VkPC9PcHRpb24+XHJcbiAgICAgICAgICA8L1NlbGVjdD5cclxuICAgICAgICAgIDxTZWxlY3RcclxuICAgICAgICAgIG1vZGU9XCJtdWx0aXBsZVwiXHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIkxhYmVsXCJcclxuICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVMYWJlbENoYW5nZX1cclxuICAgICAgICAgIHZhbHVlPXtsYWJlbH1cclxuICAgICAgICAgIHN0eWxlPXt7IGZsZXhHcm93OiAxLCBtYXJnaW5MZWZ0OiAyMCwgbWFyZ2luUmlnaHQ6IDIwIH19XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHtsYWJlbHNcclxuICAgICAgICAgICAgP2xhYmVscy5tYXAobGEgPT4gKFxyXG4gICAgICAgICAgICAgIDxPcHRpb24gdmFsdWU9e2xhLm5hbWV9IGtleT17bGEuaWR9PlxyXG4gICAgICAgICAgICAgICAge2xhLm5hbWV9XHJcbiAgICAgICAgICAgICAgPC9PcHRpb24+XHJcbiAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgIDonJ1xyXG4gICAgICAgIH1cclxuICAgICAgICA8L1NlbGVjdD5cclxuICAgICAgICA8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgb25DbGljaz17aGFuZGxlU2VhcmNofSBkaXNhYmxlZD17ZmV0Y2hpbmd9PlxyXG4gICAgICAgICAg5pCc57SiXHJcbiAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAge2ZldGNoaW5nID8gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibG9hZGluZ1wiPlxyXG4gICAgICAgICAgPFNwaW4gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKSA6IChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlzc3Vlc1wiPlxyXG4gICAgICAgICAge2lzc3Vlcy5tYXAoaXNzdWUgPT4gKFxyXG4gICAgICAgICAgICA8SXNzdWVJdGVtIGlzc3VlPXtpc3N1ZX0ga2V5PXtpc3N1ZS5pZH0+PC9Jc3N1ZUl0ZW0+XHJcbiAgICAgICAgICApKX1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKX1cclxuICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgLmlzc3VlcyB7XHJcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5zZWFyY2gge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmxvYWRpbmcge1xyXG4gICAgICAgICAgaGVpZ2h0OiA0MDBweDtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblxyXG5Jc3N1ZXMuZ2V0SW5pdGlhbFByb3BzPWFzeW5jICh7Y3R4fSk9PntcclxuICBjb25zdCB7b3duZXIsbmFtZX09Y3R4LnF1ZXJ5XHJcbiAgY29uc3QgZnVsbF9uYW1lID0gYCR7b3duZXJ9LyR7bmFtZX1gXHJcblxyXG4gIGNvbnN0IGZldGNocz0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgYXBpLnJlcXVlc3QoXHJcbiAgICAgIHtcclxuICAgICAgICB1cmw6IGAvcmVwb3MvJHtvd25lcn0vJHtuYW1lfS9pc3N1ZXNgXHJcbiAgICAgIH0sXHJcbiAgICAgIGN0eC5yZXEsXHJcbiAgICAgIGN0eC5yZXNcclxuICAgICksXHJcbiAgICBDQUNIRVtmdWxsX25hbWVdID8gUHJvbWlzZS5yZXNvbHZlKHtkYXRhOiBDQUNIRVtmdWxsX25hbWVdfSkgOiBhcGkucmVxdWVzdChcclxuICAgICAge1xyXG4gICAgICAgIHVybDogYC9yZXBvcy8ke293bmVyfS8ke25hbWV9L2xhYmVsc2BcclxuICAgICAgfSxcclxuICAgICAgY3R4LnJlcSxcclxuICAgICAgY3R4LnJlc1xyXG4gICAgKVxyXG4gIF0pXHJcblxyXG4gIGNvbnN0IFtJc3N1ZXNSZXNwLExhYmVsc1Jlc3BdPWZldGNoc1xyXG4gIHJldHVybiB7XHJcbiAgICBvd25lcixcclxuICAgIG5hbWUsXHJcbiAgICBpbml0aWFsSXNzdWVzOiBJc3N1ZXNSZXNwLmRhdGEsXHJcbiAgICBsYWJlbHM6IExhYmVsc1Jlc3AuZGF0YVxyXG4gIH1cclxufVxyXG5leHBvcnQgZGVmYXVsdCAgd2l0aERldGFpbChJc3N1ZXMsJ2lzc3VlcycpXHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\marimo\\\\\\\\Desktop\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\")), showDetail ? __jsx(IssueDetail, {\n    issue: issue\n  }) : null);\n} // 获取请求参数\n\n\nfunction makeQuery(creator, state, labels) {\n  var creatorStr = creator ? \"creator=\".concat(creator) : '';\n  var stateStr = state ? \"state=\".concat(state) : '';\n  var labelStr = '';\n\n  if (labels && labels.length) {\n    labelStr = \"labels=\".concat(labels.join(','));\n  }\n\n  var arr = [];\n  creatorStr && arr.push(creatorStr);\n  stateStr && arr.push(stateStr);\n  labelStr && arr.push(labelStr);\n  return \"?\".concat(arr.join('&'));\n}\n\nvar Issues = function Issues(_ref4) {\n  var initialIssues = _ref4.initialIssues,\n      labels = _ref4.labels,\n      owner = _ref4.owner,\n      name = _ref4.name;\n\n  var _useState2 = useState(''),\n      creator = _useState2[0],\n      setCreator = _useState2[1];\n\n  var _useState3 = useState('all'),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var _useState4 = useState([]),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  var _useState5 = useState(initialIssues),\n      issues = _useState5[0],\n      setIssues = _useState5[1];\n\n  var _useState6 = useState(false),\n      fetching = _useState6[0],\n      setFetching = _useState6[1]; // 缓存label请求结果\n\n\n  useEffect(function () {\n    !isServer && (CACHE[\"\".concat(owner, \"/\").concat(name)] = labels);\n  }, [owner, name, labels]); // 选中用户结果的回调\n\n  var handleCreatorChange = useCallback(function (value) {\n    setCreator(value);\n  }, []); // 选中状态结果的回调\n\n  var handleStateChange = useCallback(function (value) {\n    setState(value);\n  }, []); // 选中label结果的回调\n\n  var handleLabelChange = useCallback(function (value) {\n    setLabel(value);\n  }, []);\n  var handleSearch = useCallback(function () {\n    setFetching(true);\n    api.request({\n      url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\").concat(makeQuery(creator, state, label))\n    }).then(function (resp) {\n      return setIssues(resp.data);\n    })[\"catch\"](function (err) {\n      return console.error(err);\n    })[\"finally\"](function () {\n      setFetching(false);\n    });\n  }, [owner, name, creator, state, label]);\n  return __jsx(\"div\", {\n    className: \"jsx-2212480553\" + \" \" + 'root'\n  }, __jsx(\"div\", {\n    className: \"jsx-2212480553\" + \" \" + 'search'\n  }, __jsx(SearchUser, {\n    onChange: handleCreatorChange,\n    value: creator\n  }), __jsx(_Select, {\n    placeholder: \"\\u72B6\\u6001\",\n    onChange: handleStateChange,\n    value: state,\n    style: {\n      width: 200,\n      marginLeft: 20\n    }\n  }, __jsx(Option, {\n    value: \"all\"\n  }, \"all\"), __jsx(Option, {\n    value: \"open\"\n  }, \"open\"), __jsx(Option, {\n    value: \"closed\"\n  }, \"closed\")), __jsx(_Select, {\n    mode: \"multiple\",\n    placeholder: \"Label\",\n    onChange: handleLabelChange,\n    value: label,\n    style: {\n      flexGrow: 1,\n      marginLeft: 20,\n      marginRight: 20\n    }\n  }, labels ? labels.map(function (la) {\n    return __jsx(Option, {\n      value: la.name,\n      key: la.id\n    }, la.name);\n  }) : ''), __jsx(_Button, {\n    type: \"primary\",\n    onClick: handleSearch,\n    disabled: fetching\n  }, \"\\u641C\\u7D22\")), fetching ? __jsx(\"div\", {\n    className: \"jsx-2212480553\" + \" \" + \"loading\"\n  }, __jsx(_Spin, null)) : __jsx(\"div\", {\n    className: \"jsx-2212480553\" + \" \" + \"issues\"\n  }, issues.map(function (issue) {\n    return __jsx(IssueItem, {\n      issue: issue,\n      key: issue.id\n    });\n  })), __jsx(_JSXStyle, {\n    id: \"2212480553\"\n  }, \".issues.jsx-2212480553{border:1px solid #eee;border-radius:5px;margin-bottom:20px;margin-top:20px;}.search.jsx-2212480553{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.loading.jsx-2212480553{height:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\marimo\\\\\\\\Desktop\\\\\\\\next-github\\\\\\\\pages\\\\\\\\detail\\\\\\\\issues.js */\"));\n};\n\nIssues.getInitialProps = function _callee(_ref5) {\n  var ctx, _ctx$query, owner, name, full_name, fetchs, _fetchs, IssuesResp, LabelsResp;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref5.ctx;\n          _ctx$query = ctx.query, owner = _ctx$query.owner, name = _ctx$query.name;\n          full_name = \"\".concat(owner, \"/\").concat(name);\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(Promise.all([api.request({\n            url: \"/repos/\".concat(owner, \"/\").concat(name, \"/issues\")\n          }, ctx.req, ctx.res), CACHE[full_name] ? Promise.resolve({\n            data: CACHE[full_name]\n          }) : api.request({\n            url: \"/repos/\".concat(owner, \"/\").concat(name, \"/labels\")\n          }, ctx.req, ctx.res)]));\n\n        case 5:\n          fetchs = _context.sent;\n          _fetchs = _slicedToArray(fetchs, 2), IssuesResp = _fetchs[0], LabelsResp = _fetchs[1];\n          return _context.abrupt(\"return\", {\n            owner: owner,\n            name: name,\n            initialIssues: IssuesResp.data,\n            labels: LabelsResp.data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default withDetail(Issues, 'issues');","map":{"version":3,"sources":["C:/Users/marimo/Desktop/next-github/pages/detail/issues.js"],"names":["dynamic","useState","useCallback","useEffect","withDetail","api","getLastUpdated","SearchUser","Option","Markdown","loading","CACHE","isServer","Label","label","backgroundColor","color","name","IssueDetail","issue","body","html_url","IssueItem","showDetail","setShowDetail","toggleShowDetail","detail","position","top","right","user","avatar_url","title","labels","map","id","updated_at","makeQuery","creator","state","creatorStr","stateStr","labelStr","length","join","arr","push","Issues","initialIssues","owner","setCreator","setState","setLabel","issues","setIssues","fetching","setFetching","handleCreatorChange","value","handleStateChange","handleLabelChange","handleSearch","request","url","then","resp","data","err","console","error","width","marginLeft","flexGrow","marginRight","la","getInitialProps","ctx","query","full_name","Promise","all","req","res","resolve","fetchs","IssuesResp","LabelsResp"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic'\r\nimport { useState, useCallback, useEffect } from 'react'\r\nimport { Avatar, Button, Select, Spin } from 'antd'\r\n\r\nimport withDetail from '../../components/withDetail'\r\nimport api from '../../lib/api'\r\nimport {getLastUpdated} from '../../lib/utils'\r\nimport SearchUser from '../../components/SearchUser'\r\n\r\nconst Option=Select.Option\r\nconst Markdown=dynamic(()=>import ('../../components/Markdown'), {\r\n  loading: () => <p>Loading</p>\r\n})\r\n\r\nconst CACHE = {}\r\nconst isServer=typeof window==='undefined'\r\n\r\n\r\nfunction Label({ label }) {\r\n  return (\r\n    <>\r\n      <div className=\"label\" style={{ backgroundColor: `#${label.color}` }}>\r\n        {label.name}\r\n      </div>\r\n      <style jsx>{`\r\n        .label {\r\n          display: inline-block;\r\n          line-height: 20px;\r\n          margin-left: 15px;\r\n          padding: 3px;\r\n          border-radius: 3px;\r\n          font-size: 14px;\r\n        }\r\n      `}</style>\r\n    </>\r\n  )\r\n}\r\nfunction IssueDetail({issue}){\r\n  return (\r\n    <div className='root'>\r\n      <Markdown content={issue.body} />\r\n       <div className='actions'>\r\n          <Button href={issue.html_url} target=\"_blank\">\r\n              打开issue讨论页面\r\n          </Button>\r\n       </div>\r\n       <style jsx>{`\r\n       .root {\r\n          background: #fafafa;\r\n          padding: 20px;\r\n        }\r\n        .actions {\r\n          text-align: right;\r\n        }\r\n         `}</style>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction IssueItem({issue}){\r\n  const [showDetail, setShowDetail] = useState(false)\r\n  // 这个写法就可以不依赖showDetail。这么写可以避开闭包\r\n  const toggleShowDetail = useCallback(() => {\r\n    setShowDetail(detail => !detail)\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <div className=\"issue\">\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          style={{\r\n            position: 'absolute',\r\n            top: 10,\r\n            right: 10\r\n          }}\r\n          onClick={toggleShowDetail}\r\n        >\r\n          {showDetail?'隐藏':'查看'}\r\n        </Button>\r\n        <div className=\"avatar\">\r\n          <Avatar src={issue.user.avatar_url} shape=\"square\" size={50}></Avatar>\r\n      </div>\r\n      <div className=\"main-info\">\r\n          <h6>\r\n            <span>{issue.title}</span>\r\n            {issue.labels.map(label => <Label label={label} key={label.id}/>)}\r\n          </h6>\r\n          <p className=\"sub-info\">\r\n            <span>Updated at {getLastUpdated(issue.updated_at)}</span>\r\n          </p>  \r\n      </div>\r\n      <style jsx>{`\r\n          .issue {\r\n            display: flex;\r\n            position: relative;\r\n            padding: 10px;\r\n          }\r\n          .issue:hover {\r\n            background: #fafafa;\r\n          }\r\n          .issue + .issue {\r\n            border-top: 1px solid #eee;\r\n          }\r\n          .main-info > h6 {\r\n            max-width: 600px;\r\n            font-size: 16px;\r\n            padding-right: 40px;\r\n          }\r\n          .avatar {\r\n            margin-right: 20px;\r\n          }\r\n          .sub-info {\r\n            margin-bottom: 0;\r\n          }\r\n          .sub-info > span + span {\r\n            display: inline-block;\r\n            margin-left: 20px;\r\n            font-size: 12px;\r\n          }\r\n        `}</style>\r\n      \r\n      </div>\r\n      {showDetail ? <IssueDetail issue={issue} /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\n// 获取请求参数\r\nfunction makeQuery(creator, state, labels) {\r\n  let creatorStr = creator ? `creator=${creator}` : ''\r\n  let stateStr = state ? `state=${state}` : ''\r\n  let labelStr = ''\r\n  if (labels && labels.length) {\r\n    labelStr = `labels=${labels.join(',')}`\r\n  }\r\n\r\n  const arr = []\r\n\r\n  creatorStr && arr.push(creatorStr)\r\n  stateStr && arr.push(stateStr)\r\n  labelStr && arr.push(labelStr)\r\n\r\n  return `?${arr.join('&')}`\r\n}\r\n\r\n\r\n\r\nconst Issues=({initialIssues, labels, owner, name})=>{\r\n\r\nconst [creator,setCreator]=useState('')\r\nconst [state,setState]=useState('all')\r\nconst [label,setLabel]=useState([])\r\nconst [issues, setIssues] = useState(initialIssues)\r\nconst [fetching, setFetching] = useState(false)\r\n\r\n  // 缓存label请求结果\r\n  useEffect(() => {\r\n    !isServer && (CACHE[`${owner}/${name}`] = labels)\r\n  }, [owner, name, labels])\r\n\r\n  // 选中用户结果的回调\r\n  const handleCreatorChange = useCallback(value => {\r\n    setCreator(value)\r\n  }, [])\r\n\r\n  // 选中状态结果的回调\r\n  const handleStateChange = useCallback(value => {\r\n    setState(value)\r\n  }, [])\r\n\r\n  // 选中label结果的回调\r\n  const handleLabelChange = useCallback(value => {\r\n    setLabel(value)\r\n  }, [])\r\n\r\n  const handleSearch = useCallback(() => {\r\n    setFetching(true)\r\n    api.request({\r\n      url: `/repos/${owner}/${name}/issues${makeQuery(creator, state, label)}`\r\n    })\r\n      .then(resp => setIssues(resp.data))\r\n      .catch(err => console.error(err))\r\n      .finally(() => {\r\n        setFetching(false)\r\n      })\r\n  }, [owner, name, creator, state, label])\r\n  \r\n    return (\r\n      <div className='root'>\r\n        <div className='search'>\r\n          <SearchUser onChange={handleCreatorChange} value={creator}/>\r\n          <Select\r\n            placeholder=\"状态\"\r\n            onChange={handleStateChange}\r\n            value={state}\r\n            style={{ width: 200, marginLeft: 20 }}\r\n          >\r\n            <Option value='all'>all</Option>\r\n            <Option value='open'>open</Option>\r\n            <Option value='closed'>closed</Option>\r\n          </Select>\r\n          <Select\r\n          mode=\"multiple\"\r\n          placeholder=\"Label\"\r\n          onChange={handleLabelChange}\r\n          value={label}\r\n          style={{ flexGrow: 1, marginLeft: 20, marginRight: 20 }}\r\n          >\r\n            {labels\r\n            ?labels.map(la => (\r\n              <Option value={la.name} key={la.id}>\r\n                {la.name}\r\n              </Option>\r\n            ))\r\n            :''\r\n        }\r\n        </Select>\r\n        <Button type=\"primary\" onClick={handleSearch} disabled={fetching}>\r\n          搜索\r\n        </Button>\r\n        </div>\r\n        {fetching ? (\r\n        <div className=\"loading\">\r\n          <Spin />\r\n        </div>\r\n      ) : (\r\n        <div className=\"issues\">\r\n          {issues.map(issue => (\r\n            <IssueItem issue={issue} key={issue.id}></IssueItem>\r\n          ))}\r\n        </div>\r\n      )}\r\n        <style jsx>{`\r\n        .issues {\r\n          border: 1px solid #eee;\r\n          border-radius: 5px;\r\n          margin-bottom: 20px;\r\n          margin-top: 20px;\r\n        }\r\n        .search {\r\n          display: flex;\r\n        }\r\n        .loading {\r\n          height: 400px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n      `}</style>\r\n      </div>\r\n    )\r\n}\r\n\r\nIssues.getInitialProps=async ({ctx})=>{\r\n  const {owner,name}=ctx.query\r\n  const full_name = `${owner}/${name}`\r\n\r\n  const fetchs= await Promise.all([\r\n    api.request(\r\n      {\r\n        url: `/repos/${owner}/${name}/issues`\r\n      },\r\n      ctx.req,\r\n      ctx.res\r\n    ),\r\n    CACHE[full_name] ? Promise.resolve({data: CACHE[full_name]}) : api.request(\r\n      {\r\n        url: `/repos/${owner}/${name}/labels`\r\n      },\r\n      ctx.req,\r\n      ctx.res\r\n    )\r\n  ])\r\n\r\n  const [IssuesResp,LabelsResp]=fetchs\r\n  return {\r\n    owner,\r\n    name,\r\n    initialIssues: IssuesResp.data,\r\n    labels: LabelsResp.data\r\n  }\r\n}\r\nexport default  withDetail(Issues,'issues')\r\n"]},"metadata":{},"sourceType":"module"}