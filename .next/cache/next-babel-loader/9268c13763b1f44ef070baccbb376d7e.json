{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport initialStore from '../store';\nconst isServer = true;\nconst _NEXT_REDUX_STORE = '_NEXT_REDUX_STORE';\n\nfunction getOrCreateStore(initialState = {}) {\n  if (isServer) {\n    return initialStore(initialState);\n  }\n\n  if (!window[_NEXT_REDUX_STORE]) {\n    window[_NEXT_REDUX_STORE] = initialStore(initialState);\n  }\n\n  return window[_NEXT_REDUX_STORE];\n}\n\nexport default (Comp => {\n  class WithReduxApp extends React.Component {\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        Component,\n        pageProps\n      } = _this$props,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n      return __jsx(Comp, _extends({}, rest, {\n        pageProp: pageProps,\n        reduxStore: this.reduxStore,\n        Component: Component\n      }));\n    }\n\n  }\n\n  WithReduxApp.getInitialProps = async ctx => {\n    let reduxStore;\n\n    if (isServer) {\n      const {\n        req = {}\n      } = ctx.ctx;\n      const session = req.session;\n\n      if (session && session.userInfo) {\n        reduxStore = getOrCreateStore({\n          user: session.userInfo\n        }); //只是为了获取初始值\n      } else {\n        reduxStore = getOrCreateStore();\n      }\n    } else {\n      reduxStore = getOrCreateStore();\n    }\n\n    ctx.reduxStore = reduxStore;\n    let appProps = {};\n\n    if (typeof Comp.getInitialProps === 'function') {\n      appProps = await Comp.getInitialProps(ctx);\n    }\n\n    return _objectSpread({}, appProps, {\n      initialReduxState: reduxStore && reduxStore.getState()\n    });\n  };\n\n  return WithReduxApp;\n});","map":{"version":3,"sources":["D:\\next-github\\lib\\withRedux.js"],"names":["React","initialStore","isServer","_NEXT_REDUX_STORE","getOrCreateStore","initialState","window","Comp","WithReduxApp","Component","constructor","props","reduxStore","initialReduxState","render","pageProps","rest","getInitialProps","ctx","req","session","userInfo","user","appProps","getState"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,MAAMC,QAAQ,OAAd;AACA,MAAMC,iBAAiB,GAAC,mBAAxB;;AACA,SAASC,gBAAT,CAA0BC,YAAY,GAAC,EAAvC,EAA0C;AACxC,MAAGH,QAAH,EAAY;AACV,WAAOD,YAAY,CAACI,YAAD,CAAnB;AACD;;AACD,MAAG,CAACC,MAAM,CAACH,iBAAD,CAAV,EAA8B;AAC5BG,IAAAA,MAAM,CAACH,iBAAD,CAAN,GAA0BF,YAAY,CAACI,YAAD,CAAtC;AACD;;AACD,SAAOC,MAAM,CAACH,iBAAD,CAAb;AACD;;AACD,gBAAeI,IAAI,IAAE;AACnB,QAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA0C;AACxCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,YAAMA,KAAN;AACA,WAAKC,UAAL,GAAgBR,gBAAgB,CAACO,KAAK,CAACE,iBAAP,CAAhC;AACD;;AACDC,IAAAA,MAAM,GAAE;AACR,0BAAoC,KAAKH,KAAzC;AAAA,YAAM;AAACF,QAAAA,SAAD;AAAWM,QAAAA;AAAX,OAAN;AAAA,YAA8BC,IAA9B;;AACA,aACE,MAAC,IAAD,eAAUA,IAAV;AAAgB,QAAA,QAAQ,EAAED,SAA1B;AAAqC,QAAA,UAAU,EAAE,KAAKH,UAAtD;AAAkE,QAAA,SAAS,EAAEH;AAA7E,SADF;AAGD;;AAVyC;;AAa1CD,EAAAA,YAAY,CAACS,eAAb,GAA6B,MAAMC,GAAN,IAAW;AACtC,QAAIN,UAAJ;;AACA,QAAGV,QAAH,EAAY;AACV,YAAM;AAACiB,QAAAA,GAAG,GAAC;AAAL,UAASD,GAAG,CAACA,GAAnB;AACA,YAAME,OAAO,GAACD,GAAG,CAACC,OAAlB;;AACA,UAAGA,OAAO,IAAEA,OAAO,CAACC,QAApB,EAA6B;AAC3BT,QAAAA,UAAU,GAACR,gBAAgB,CAAC;AAC1BkB,UAAAA,IAAI,EAACF,OAAO,CAACC;AADa,SAAD,CAA3B,CAD2B,CAGzB;AACH,OAJD,MAIK;AACHT,QAAAA,UAAU,GAACR,gBAAgB,EAA3B;AACD;AACF,KAVD,MAWI;AACFQ,MAAAA,UAAU,GAACR,gBAAgB,EAA3B;AACD;;AACDc,IAAAA,GAAG,CAACN,UAAJ,GAAeA,UAAf;AACA,QAAIW,QAAQ,GAAG,EAAf;;AACA,QAAI,OAAOhB,IAAI,CAACU,eAAZ,KAAgC,UAApC,EAAgD;AAC9CM,MAAAA,QAAQ,GAAG,MAAMhB,IAAI,CAACU,eAAL,CAAqBC,GAArB,CAAjB;AACD;;AACD,6BACKK,QADL;AAEEV,MAAAA,iBAAiB,EAAED,UAAU,IAAEA,UAAU,CAACY,QAAX;AAFjC;AAIH,GAzBC;;AA0BF,SAAOhB,YAAP;AACC,CAzCD","sourcesContent":["import React from 'react'\r\nimport initialStore from '../store'\r\nconst isServer=typeof window==='undefined'\r\nconst _NEXT_REDUX_STORE='_NEXT_REDUX_STORE'\r\nfunction getOrCreateStore(initialState={}){\r\n  if(isServer){\r\n    return initialStore(initialState)\r\n  }\r\n  if(!window[_NEXT_REDUX_STORE]){\r\n    window[_NEXT_REDUX_STORE]=initialStore(initialState)\r\n  }\r\n  return window[_NEXT_REDUX_STORE]\r\n}\r\nexport default Comp=>{\r\n  class WithReduxApp extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.reduxStore=getOrCreateStore(props.initialReduxState)\r\n    }\r\n    render(){\r\n    const {Component,pageProps,...rest}=this.props\r\n    return(\r\n      <Comp {...rest} pageProp={pageProps} reduxStore={this.reduxStore} Component={Component}/>\r\n    )\r\n  }\r\n  }\r\n  \r\n  WithReduxApp.getInitialProps=async ctx=>{\r\n    let reduxStore\r\n    if(isServer){\r\n      const {req={}}=ctx.ctx\r\n      const session=req.session\r\n      if(session&&session.userInfo){\r\n        reduxStore=getOrCreateStore({\r\n          user:session.userInfo\r\n        })//只是为了获取初始值\r\n      }else{\r\n        reduxStore=getOrCreateStore()\r\n      }\r\n    }\r\n    else{\r\n      reduxStore=getOrCreateStore()\r\n    }\r\n    ctx.reduxStore=reduxStore\r\n    let appProps = {}\r\n    if (typeof Comp.getInitialProps === 'function') {\r\n      appProps = await Comp.getInitialProps(ctx)\r\n    }\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore&&reduxStore.getState(),\r\n    }\r\n}\r\nreturn WithReduxApp\r\n}\r\n"]},"metadata":{},"sourceType":"module"}