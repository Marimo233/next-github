{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link'; //next自带方法\n\nimport getConfig from 'next/config';\nimport api from '../lib/api';\nimport { configConsumerProps } from \"antd/lib/config-provider\";\n\nfunction Index(_ref) {\n  var userRepos = _ref.userRepos,\n      userStarredRepos = _ref.userStarredRepos,\n      isLogin = _ref.isLogin;\n  // return <Layout>index</Layout>\n  console.log(userRepos, userStarredRepos, isLogin);\n  return __jsx(\"span\", null, \"index\");\n}\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var ctx, reduxStore, user, userRepos, userStarredRepos;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = _ref2.ctx, reduxStore = _ref2.reduxStore;\n          user = reduxStore.getState().user;\n\n          if (!(!user || !user.id)) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            isLogin: false\n          });\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/repos'\n          }, ctx.req, ctx.res));\n\n        case 6:\n          userRepos = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(api.request({\n            url: '/user/starred'\n          }, ctx.req, ctx.res));\n\n        case 9:\n          userStarredRepos = _context.sent;\n          console.log(userRepos, userStarredRepos);\n          return _context.abrupt(\"return\", {\n            isLogin: true,\n            userRepos: userRepos.data,\n            userStarredRepos: userStarredRepos.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/marimo/Desktop/next-github/pages/index.js"],"names":["useEffect","axios","Link","getConfig","api","configConsumerProps","Index","userRepos","userStarredRepos","isLogin","console","log","getInitialProps","ctx","reduxStore","user","getState","id","request","url","req","res","data"],"mappings":";;;AACA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AACA,SAASC,KAAT,OAAoD;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAA1BC,gBAA0B,QAA1BA,gBAA0B;AAAA,MAATC,OAAS,QAATA,OAAS;AAClD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAsBC,gBAAtB,EAAuCC,OAAvC;AACA,SAAO,4BAAP;AACD;;AAEDH,KAAK,CAACM,eAAN,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,GAAR,SAAQA,GAAR,EAAYC,UAAZ,SAAYA,UAAZ;AACdC,UAAAA,IADc,GACTD,UAAU,CAACE,QAAX,GAAsBD,IADb;;AAAA,gBAEjB,CAACA,IAAD,IAAO,CAACA,IAAI,CAACE,EAFI;AAAA;AAAA;AAAA;;AAAA,2CAGX;AACLR,YAAAA,OAAO,EAAC;AADH,WAHW;;AAAA;AAAA;AAAA,2CAOEL,GAAG,CAACc,OAAJ,CAAY;AAACC,YAAAA,GAAG,EAAC;AAAL,WAAZ,EAAgCN,GAAG,CAACO,GAApC,EAAwCP,GAAG,CAACQ,GAA5C,CAPF;;AAAA;AAOdd,UAAAA,SAPc;AAAA;AAAA,2CAQSH,GAAG,CAACc,OAAJ,CAAY;AAACC,YAAAA,GAAG,EAAC;AAAL,WAAZ,EAAkCN,GAAG,CAACO,GAAtC,EAA0CP,GAAG,CAACQ,GAA9C,CART;;AAAA;AAQdb,UAAAA,gBARc;AASnBE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAsBC,gBAAtB;AATmB,2CAUb;AACLC,YAAAA,OAAO,EAAC,IADH;AAELF,YAAAA,SAAS,EAACA,SAAS,CAACe,IAFf;AAGLd,YAAAA,gBAAgB,EAACA,gBAAgB,CAACc;AAH7B,WAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAkBA,eAAehB,KAAf","sourcesContent":["import {Button} from \"antd\"\r\nimport {useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Link from 'next/link'\r\n//next自带方法\r\nimport getConfig from 'next/config'\r\nimport api from '../lib/api'\r\nimport { configConsumerProps } from \"antd/lib/config-provider\"\r\nfunction Index({userRepos,userStarredRepos,isLogin}){\r\n  // return <Layout>index</Layout>\r\n  console.log(userRepos,userStarredRepos,isLogin)\r\n  return <span>index</span>\r\n}\r\n\r\nIndex.getInitialProps=async ({ctx,reduxStore})=>{\r\n  const user=reduxStore.getState().user\r\n  if(!user||!user.id){\r\n    return {\r\n      isLogin:false\r\n    }\r\n  }\r\n  const userRepos=await api.request({url:'/user/repos'},ctx.req,ctx.res)\r\n  const userStarredRepos=await api.request({url:'/user/starred'},ctx.req,ctx.res)\r\n   console.log(userRepos,userStarredRepos)\r\n  return {\r\n    isLogin:true,\r\n    userRepos:userRepos.data,\r\n    userStarredRepos:userStarredRepos.data\r\n  }\r\n  \r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}