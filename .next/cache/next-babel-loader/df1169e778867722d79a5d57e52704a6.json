{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withDetail from '../../components/withDetail';\nimport Markdown from '../../components/Markdown';\nimport api from '../../lib/api';\n\nvar Detail = function Detail(_ref) {\n  var readme = _ref.readme;\n  console.log(withDetail);\n  return __jsx(Markdown, {\n    content: readme.content,\n    isbase64: true\n  });\n};\n\nDetail.getInitialProps = function _callee(_ref2) {\n  var _ref2$ctx$query, owner, name, readmeResp;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref2$ctx$query = _ref2.ctx.query, owner = _ref2$ctx$query.owner, name = _ref2$ctx$query.name;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(api.request({\n            url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n          }, req, res));\n\n        case 4:\n          readmeResp = _context.sent;\n          return _context.abrupt(\"return\", {\n            readme: readmeResp.data\n          });\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", {\n            readme: {}\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\n\nexport default withDetail(Detail, 'index'); // export default  Detail","map":{"version":3,"sources":["C:/Users/marimo/Desktop/next-github/pages/detail/index.js"],"names":["withDetail","Markdown","api","Detail","readme","console","log","content","getInitialProps","ctx","query","owner","name","request","url","req","res","readmeResp","data"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AACA,IAAMC,MAAM,GAAC,SAAPA,MAAO,OAAY;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACA,SAAO,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEI,MAAM,CAACG,OAA1B;AAAmC,IAAA,QAAQ,EAAE;AAA7C,IAAP;AACH,CAHD;;AAKAJ,MAAM,CAACK,eAAP,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kCAASC,GAAT,CAAgBC,KAAhB,EAAwBC,KAAxB,mBAAwBA,KAAxB,EAA+BC,IAA/B,mBAA+BA,IAA/B;AAAA;AAAA;AAAA,2CAEGV,GAAG,CAACW,OAAJ,CACvB;AACIC,YAAAA,GAAG,mBAAYH,KAAZ,cAAqBC,IAArB;AADP,WADuB,EAIvBG,GAJuB,EAKvBC,GALuB,CAFH;;AAAA;AAEhBC,UAAAA,UAFgB;AAAA,2CASf;AACLb,YAAAA,MAAM,EAAEa,UAAU,CAACC;AADd,WATe;;AAAA;AAAA;AAAA;AAapBb,UAAAA,OAAO,CAACC,GAAR;AAboB,2CAcb;AACLF,YAAAA,MAAM,EAAE;AADH,WAda;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAuBA,eAAgBJ,UAAU,CAACG,MAAD,EAAQ,OAAR,CAA1B,C,CACA","sourcesContent":["import withDetail from '../../components/withDetail'\r\nimport Markdown from '../../components/Markdown'\r\nimport api from '../../lib/api'\r\nconst Detail=({readme})=>{\r\n    console.log(withDetail)\r\n    return <Markdown content={readme.content} isbase64={true}/>\r\n}\r\n\r\nDetail.getInitialProps= async ({ ctx: { query: {owner, name}}})=>{\r\n  try {\r\n  const readmeResp = await api.request(\r\n    {\r\n        url: `/repos/${owner}/${name}/readme`\r\n    },\r\n    req,\r\n    res\r\n    )\r\n  return {\r\n    readme: readmeResp.data\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n    return {\r\n      readme: {}\r\n      }\r\n  }\r\n    \r\n    \r\n      \r\n}\r\n\r\nexport default  withDetail(Detail,'index')\r\n// export default  Detail"]},"metadata":{},"sourceType":"module"}