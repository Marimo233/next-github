{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\");\n\nvar axios = require('axios');\n\nvar isServer = false;\nvar github_base_url = 'https://api.github.com';\n\nfunction request(_x, _x2, _x3) {\n  return _request.apply(this, arguments);\n}\n\nfunction _request() {\n  _request = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref, req, res) {\n    var _ref$method, method, url, data, githubAuth, token, headers;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref$method = _ref.method, method = _ref$method === void 0 ? 'GET' : _ref$method, url = _ref.url, data = _ref.data;\n\n            if (url) {\n              _context.next = 3;\n              break;\n            }\n\n            throw Error('url must be provied');\n\n          case 3:\n            if (!isServer) {\n              _context.next = 11;\n              break;\n            }\n\n            githubAuth = req.session && req.session.githubAuth || {};\n            token = githubAuth && githubAuth.access_token;\n            headers = {};\n\n            if (token) {\n              headers['Authorization'] = \"\".concat(githubAuth.token_type, \" \").concat(token);\n            }\n\n            return _context.abrupt(\"return\", axios({\n              method: method,\n              url: \"\".concat(github_base_url).concat(url),\n              headers: headers,\n              data: data\n            }));\n\n          case 11:\n            return _context.abrupt(\"return\", axios({\n              method: method,\n              url: \"/github\".concat(url),\n              data: data\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _request.apply(this, arguments);\n}\n\nmodule.exports = {\n  request: request\n};","map":{"version":3,"sources":["C:\\Users\\marimo\\Desktop\\next-github\\lib\\api.js"],"names":["axios","require","isServer","github_base_url","request","req","res","method","url","data","Error","githubAuth","session","token","access_token","headers","token_type","module","exports"],"mappings":";;;;AAAA,IAAMA,KAAK,GAACC,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,eAAe,GAAC,wBAAtB;;SAEeC,O;;;;;;;2BAAf,uBAA+CC,GAA/C,EAAmDC,GAAnD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwBC,MAAxB,EAAwBA,MAAxB,4BAA+B,KAA/B,gBAAqCC,GAArC,QAAqCA,GAArC,EAAyCC,IAAzC,QAAyCA,IAAzC;;AAAA,gBACMD,GADN;AAAA;AAAA;AAAA;;AAAA,kBAEUE,KAAK,CAAC,qBAAD,CAFf;;AAAA;AAAA,iBAIKR,QAJL;AAAA;AAAA;AAAA;;AAKUS,YAAAA,UALV,GAKqBN,GAAG,CAACO,OAAJ,IAAaP,GAAG,CAACO,OAAJ,CAAYD,UAAzB,IAAqC,EAL1D;AAMUE,YAAAA,KANV,GAMkBF,UAAU,IAAEA,UAAU,CAACG,YANzC;AAOQC,YAAAA,OAPR,GAOgB,EAPhB;;AAQI,gBAAGF,KAAH,EAAS;AACPE,cAAAA,OAAO,CAAC,eAAD,CAAP,aAA4BJ,UAAU,CAACK,UAAvC,cAAqDH,KAArD;AACD;;AAVL,6CAWWb,KAAK,CAAC;AACXO,cAAAA,MAAM,EAANA,MADW;AAEXC,cAAAA,GAAG,YAAIL,eAAJ,SAAsBK,GAAtB,CAFQ;AAGXO,cAAAA,OAAO,EAAPA,OAHW;AAIXN,cAAAA,IAAI,EAAJA;AAJW,aAAD,CAXhB;;AAAA;AAAA,6CAmBWT,KAAK,CAAC;AACXO,cAAAA,MAAM,EAANA,MADW;AAEXC,cAAAA,GAAG,mBAAWA,GAAX,CAFQ;AAGXC,cAAAA,IAAI,EAAJA;AAHW,aAAD,CAnBhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA2BAQ,MAAM,CAACC,OAAP,GAAe;AACbd,EAAAA,OAAO,EAAPA;AADa,CAAf","sourcesContent":["const axios=require('axios')\r\n\r\nconst isServer =typeof window==='undefined'\r\nconst github_base_url='https://api.github.com'\r\n\r\nasync function request({method='GET',url,data},req,res){\r\n  if(!url){\r\n    throw Error('url must be provied')\r\n  }\r\n  if(isServer){\r\n    const githubAuth=req.session&&req.session.githubAuth||{}\r\n    const token = githubAuth&&githubAuth.access_token\r\n    let headers={}\r\n    if(token){\r\n      headers['Authorization']=`${githubAuth.token_type} ${token}`\r\n    }\r\n    return axios({\r\n      method,\r\n      url:`${github_base_url}${url}`,\r\n      headers,\r\n      data\r\n    })\r\n  \r\n  }else{\r\n    return axios({\r\n      method,\r\n      url:`/github${url}`,\r\n      data\r\n    })\r\n  }\r\n}\r\n\r\nmodule.exports={\r\n  request\r\n}"]},"metadata":{},"sourceType":"script"}